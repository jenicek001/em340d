services:
  em340d:
    build: 
      context: .
      dockerfile: Dockerfile
      args:
        USER_ID: ${USER_ID:-1000}
        GROUP_ID: ${GROUP_ID:-1000}
        DIALOUT_GID: ${DIALOUT_GID:-20}
    container_name: em340d
    restart: unless-stopped
    
    # Container runs as dynamically created user matching host user permissions
    # Build args ensure container user has same UID/GID as host user
    
    # Serial device access - supports both by-id and direct device paths
    devices:
      - /dev/ttyUSB0:/dev/ttyUSB0
      - /dev/ttyACM0:/dev/ttyACM0
    
    # Mount serial device symlinks for stable device IDs
    volumes:
      - ./config/em340.yaml:/app/em340.yaml:ro
      - em340d_logs:/app/logs
      - /dev/serial:/dev/serial:ro  # Mount serial by-id symlinks
    
    # Alternative: For multiple USB-RS485 adapters or complex setups, use privileged mode:
    # privileged: true
    # volumes:
    #   - /dev:/dev
    
    # Configuration and data persistence
    
    # Environment variables for configuration
    environment:
      - MQTT_BROKER=${MQTT_BROKER:-localhost}
      - MQTT_PORT=${MQTT_PORT:-1883}
      - MQTT_USERNAME=${MQTT_USERNAME:-}
      - MQTT_PASSWORD=${MQTT_PASSWORD:-}
      - MQTT_TOPIC=${MQTT_TOPIC:-em340}
      - SERIAL_DEVICE=${SERIAL_DEVICE:-/dev/ttyUSB0}
      - MODBUS_ADDRESS=${MODBUS_ADDRESS:-1}
      - DEVICE_SERIAL_NUMBER=${DEVICE_SERIAL_NUMBER:-EM340_UNKNOWN}
      - DEVICE_NAME=${DEVICE_NAME:-EM340}  # Legacy support
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - DELAY_MS=${DELAY_MS:-50}
    
    # Logging configuration with timestamps
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        # Enable timestamps in Docker logs
        labels: "service=em340d"
    
    # Health check
    healthcheck:
      test: ["CMD-SHELL", "python -c 'import os; exit(0 if os.path.exists(\"/app/em340.yaml\") else 1)'"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    
    # Network mode - using host networking for MQTT broker connectivity
    network_mode: "host"  # Allows container to access host's localhost

# Named volumes for data persistence
volumes:
  em340d_logs:
    driver: local

# Optional: Custom networks
# networks:
#   em340d_net:
#     driver: bridge
